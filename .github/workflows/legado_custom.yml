name: LegadoCustom

on: 
  workflow_dispatch:
    inputs: 
      git_url: 
        description: '项目地址'      
        required: true 
        default: 'https://github.com/gedoor/legado.git'
      git_tag:
        description: '项目标签'      
        required: true 
        default: '3.23.110211'
      app_channel:
        description: '应用程序'      
        required: true 
        default: 'App'
      app_custom:
        description: '自定义脚本'      
        required: true 
        default: 'diy_test.sh'
      app_name: 
        description: '应用程序名称'      
        required: true 
        default: '阅读'
      app_suffix: 
        description: '应用后缀'      
        required: true 
        default: 'A'
      app_launch_name: 
        description: '应用程序启动名称'      
        required: true 
        default: '阅读.A'
      webdav_upload: 
        description: '构建完成上传'      
        required: true
        default: 'false'
      webdav_url: 
        description: '上传网址'      
        required: true
        default: 'https://dav.jianguoyun.com/dav/'
      webdav_auth:
        description: 'Webdav auth user and password'      
        required: true 
        default: 'test@test.com:test_12345'

jobs:
  build_apk:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: 设置JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
        
    - name: 设置Gradle
      uses: gradle/gradle-build-action@v2.4.2
      
    - name: 设置环境变量
      shell: bash
      env:
        SECRETS_APP_NAME: ${{ github.event.inputs.app_name }}
        SECRETS_GIT_URL: ${{ github.event.inputs.git_url }}
        SECRETS_CHANNEL: ${{ github.event.inputs.app_channel }}
        SECRETS_SUFFIX: ${{ github.event.inputs.app_suffix }}
        SECRETS_ENABLE: ${{ secrets.ENABLE }}
        SECRETS_MINIFY: ${{ secrets.MINIFY }}
        SECRETS_RENAME: ${{ secrets.RENAME }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_ACTOR: ${{ github.actor }}
        SECRETS_TAG: ${{ github.event.inputs.git_tag }}
        SECRETS_LAUNCH_NAME: ${{ github.event.inputs.app_launch_name }}
      run: source $GITHUB_WORKSPACE/action_setenv.sh
    
    - name: 克隆代码
      shell: bash
      run: source $GITHUB_WORKSPACE/action_clone.sh

    - name: 自定义
      shell: bash
      env:
        custom: ${{ github.event.inputs.app_custom }}
      run: |
        source $GITHUB_WORKSPACE/diy/$custom
        
    - name: 构建app
      if: success()
      shell: bash
      run: |
        source $GITHUB_WORKSPACE/action_app_build.sh
        app_build

    - name: 上传
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ env.APP_UPLOAD_NAME }}
        path: ${{ env.APP_UPLOAD }}

    - name: 上传到webdav
      if: success()
      shell: bash
      env:
        WEBDAV_URL: ${{ github.event.inputs.webdav_url }}
        WEBDAV_AUTH: ${{ github.event.inputs.webdav_auth }}
        WEBDAV_UPLOAD: ${{ github.event.inputs.webdav_upload }}
      run: |
        source $GITHUB_WORKSPACE/action_util.sh
        webdav_upload $APP_UPLOAD/*.apk
        
